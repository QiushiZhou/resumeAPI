name: Terraform Deployment

on:
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-2
  TF_DIR: ./terraform/

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read

    steps:

      # 1. 配置 AWS 凭证 (推荐使用 OIDC)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 2. 安装 Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform-version: 1.5.7

      # 3. Terraform 工作流
      - name: Terraform Init
        working-directory: ${{ env.TF_DIR }}  # 显式指定工作目录
        run: terraform init

      - name: Terraform Format Check
        working-directory: ${{ env.TF_DIR }}
        run: terraform fmt -check -diff

      - name: Terraform Validate
        working-directory: ${{ env.TF_DIR }}
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform 
        run: terraform plan -input=false -out=tfplan

      - name: Terraform Apply
        working-directory: ${{ env.TF_DIR }} 
        run: terraform apply -input=false -auto-approve tfplan

      # 4. 输出部署结果
      - name: Export Outputs
        id: get-outputs
        working-directory: ${{ env.TF_DIR }}
        run: |
          echo "instance_id=$(terraform output -raw instance_id)" >> $GITHUB_OUTPUT
          echo "public_ip=$(terraform output -raw public_ip)" >> $GITHUB_OUTPUT

      # 5. 健康检查 (可选)
      - name: Service Health Check
        run: |
          echo "Checking services on ${{ steps.get-outputs.outputs.public_ip }}"
          curl --retry 3 --retry-delay 5 -sSf http://${{ steps.get-outputs.outputs.public_ip }}:3000/health
          curl --retry 3 --retry-delay 5 -sSf http://${{ steps.get-outputs.outputs.public_ip }}:5000/health
